<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/pt/isec/ams/quizec/ExampleInstrumentedTest.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/data/models/Answer.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/data/models/Question.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/data/models/QuestionType.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/data/models/Quiz.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/data/models/QuizStatus.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/data/models/User.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/data/models/UserRole.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/HomeScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/LoginScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuestionHistoryScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAccessScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAcessCodeScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizCreationScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizHistoryScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/screens/RegisterScreen.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/theme/Color.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/theme/Theme.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/ui/theme/Type.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/utils/IdGenerator.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/utils/IdGeneratorQ.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/utils/LocationUtils.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/viewmodel/AuthViewModel.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/viewmodel/LoginViewModel.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuestionHistoryViewModel.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizCreationViewModel.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizHistoryViewModel.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizScreenViewModel.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/viewmodel/RegisterViewModel.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/java/pt/isec/ams/quizec/MainActivity.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/drawable/baseline_quiz_24.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/drawable/ic_launcher_background.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/drawable/ic_launcher_foreground.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/drawable/placeholder_image.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/values/colors.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/values/strings.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/values/themes.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/xml/backup_rules.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/res/xml/data_extraction_rules.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/main/AndroidManifest.xml;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/src/test/java/pt/isec/ams/quizec/ExampleUnitTest.kt;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/build.gradle.kts;C:/Users/USUARIO/AndroidStudioProjects/Quizec/app/google-services.json;C:/Users/USUARIO/AndroidStudioProjects/Quizec/build.gradle.kts;C:/Users/USUARIO/AndroidStudioProjects/Quizec/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/USUARIO/AndroidStudioProjects/Quizec&quot;:&quot;{\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizCreationViewModel.kt\&quot;:\&quot;This file contains a single class, `QuizCreationViewModel`, which is a ViewModel class responsible for managing the state and logic related to creating and saving quizzes in a Firebase Firestore database.\\n\\n`QuizCreationViewModel`: A ViewModel class that handles the creation and saving of quizzes, including managing the list of questions, generating unique IDs, and interacting with the Firebase Firestore database.\\n\\n`generateUniqueQuizId()`: Generates a unique ID for a new quiz.\\n`generateUniqueQId()`: Generates a unique ID for a new question.\\n`saveQuiz()`: Saves a new quiz to the Firebase Firestore database, including the associated questions.\\n`addQuestion()`: Adds a new question to the list of questions for the quiz.\\n`updateAccessCode()`: Updates the access code for a quiz in the Firebase Firestore database.\\n`checkLocationPermissionAndDistance()`: Checks the user\\u0027s location and verifies if they are within a certain distance from the quiz creator\\u0027s location.\\n`calculateDistance()`: Calculates the distance between two geographical locations.\&quot;,\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\&quot;:\&quot;This file is an XML configuration for an Android adaptive icon. It does not contain any classes or functions, but rather defines the background, foreground, and monochrome elements of the adaptive icon.\\n\\n`adaptive-icon`: This element defines the adaptive icon, which is a feature in Android that allows for a single icon to be displayed in different sizes and shapes.\\n\\n`background`: This element specifies the drawable resource to be used as the background of the adaptive icon.\\n\\n`foreground`: This element specifies the drawable resource to be used as the foreground of the adaptive icon.\\n\\n`monochrome`: This element specifies the drawable resource to be used as the monochrome version of the adaptive icon, which is used in certain contexts such as the app launcher.\&quot;,\&quot;/app/google-services.json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project. It does not contain any classes or functions, but rather provides information about the project, such as the project number, project ID, and storage bucket. The file also includes client information, such as the mobile SDK app ID and the Android client package name. Additionally, it includes an API key and information about the app invite service. Overall, this file is used to configure the Firebase project and its associated services.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/UserRole.kt\&quot;:\&quot;This file defines a single `enum class` called `UserRole` which represents the different roles a user can have in the application, specifically \\\&quot;TEACHER\\\&quot; and \\\&quot;STUDENT\\\&quot;.\&quot;,\&quot;/app/src/main/AndroidManifest.xml\&quot;:\&quot;This file is an Android manifest file that defines the configuration and permissions for an Android application. It does not contain any classes or functions, but rather provides the following information:\\n\\n`\\u003cmanifest\\u003e`: Defines the root element of the Android manifest file, which includes the application\\u0027s package name and other metadata.\\n\\n`\\u003cuses-permission\\u003e`: Declares the permissions required by the application, such as access to the device\\u0027s location and internet connectivity.\\n\\n`\\u003capplication\\u003e`: Defines the application\\u0027s settings, including the app\\u0027s name, icon, theme, and the main activity.\\n\\n`\\u003cactivity\\u003e`: Defines the main activity of the application, which is the entry point for the app and is set as the launcher activity.\\n\\nIn summary, this Android manifest file sets up the necessary configuration and permissions for the application, including the main activity and required permissions for accessing the device\\u0027s location and internet connectivity.\&quot;,\&quot;/app/src/main/res/drawable/ic_launcher_foreground.xml\&quot;:\&quot;This file appears to be an Android vector drawable resource file. It defines a vector graphic that can be used as an app icon or other visual asset in an Android application. The file does not contain any classes or functions, but rather defines the vector path and gradient fill for the graphic.\\n\\nThe vector graphic appears to depict a stylized Android logo or icon, with a gradient background and a white foreground shape. The file specifies the dimensions of the graphic (108dp x 108dp) and the viewport dimensions (108 x 108), as well as the path data and gradient fill for the graphic.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/RegisterScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`RegisterScreen`: This function defines the UI and behavior for the registration screen in the QuizEC application, allowing users to register with their name, email, password, and user role (Student or Teacher).\\n\\nThe file also includes several helper functions and states to manage the form inputs, dropdown menu, and navigation/error handling logic.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for the QuizEC Android app using Jetpack Compose. It sets the default text style for the body of the app, and provides commented-out examples for other text styles such as title and label.\\n\\n`Typography`: Defines the set of Material typography styles to be used in the app, including the default body text style.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/RegisterViewModel.kt\&quot;:\&quot;This file contains a `RegisterViewModel` class and several functions within it. Here\\u0027s a summary of each:\\n\\n`RegisterViewModel`: A ViewModel class that handles the registration process for a user, including creating a new user in Firebase Authentication and storing the user\\u0027s information in Firestore.\\n\\n`register`: Registers a new user with the provided email, password, name, and role, and adds the user\\u0027s information to Firestore.\\n`addUserToFirestore`: Adds a new user document to the \\\&quot;users\\\&quot; collection in Firestore.\\n`getFirebaseAuthErrorMessage`: Provides more descriptive error messages for common Firebase Authentication exceptions.\\n`resetRegisterState`: Resets the state of the registration process.\\n\\nThe file also defines a `RegisterState` sealed class to represent the possible states of the registration process (success or error).\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuestionHistoryScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`QuestionHistoryScreen`: This function represents a screen in the QuizEC application that displays the history of questions for a specific quiz. It fetches the questions from a ViewModel, displays them in a LazyColumn, and provides buttons to edit, duplicate, or delete each question.\\n\\nThe file does not contain any classes. It is a Jetpack Compose-based UI screen that interacts with a ViewModel to manage the display and manipulation of quiz questions.\&quot;,\&quot;/app/src/main/res/xml/data_extraction_rules.xml\&quot;:\&quot;This file is an XML configuration file for data extraction rules in Android 12 backup and restore functionality. It does not contain any classes or functions, but rather provides a template for configuring what data should be included or excluded from cloud backups and device transfers.\\n\\nThe file contains the following sections:\\n\\n`\\u003ccloud-backup\\u003e`: This section is used to configure what data should be included or excluded from cloud backups.\\n\\n`\\u003cdevice-transfer\\u003e`: This section is used to configure what data should be included or excluded from device transfers.\\n\\nThe file is intended to be customized by developers to control what data is backed up or transferred, based on the specific requirements of their Android application.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizScreen.kt\&quot;:\&quot;This file appears to contain a single class definition, with no functions. The file seems to be defining a `QuizScreen` class, which is likely a UI screen or component for a quiz-related application.\\n\\n`QuizScreen`: A class that represents a screen or component for displaying a quiz, taking in a `quizId` and a `viewModel` as parameters.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizHistoryViewModel.kt\&quot;:\&quot;This file contains a single class, `QuizHistoryViewModel`, which is a ViewModel class responsible for managing the state and logic related to the quiz history feature in the application.\\n\\n`QuizHistoryViewModel`: A ViewModel class that manages the state and logic related to the quiz history feature, including loading quizzes from Firestore, filtering quizzes by query and status, formatting dates, and performing CRUD operations on quizzes.\\n\\n`loadQuizzes()`: Loads the list of quizzes from Firestore and updates the state accordingly.\\n\\n`filterByQuery(query: String)`: Filters the list of quizzes based on the provided query string.\\n\\n`filterByStatus(status: String)`: Filters the list of quizzes based on the provided status.\\n\\n`formatDate(timestamp: Long)`: Formats the creation date of a quiz for display in the UI.\\n\\n`deleteQuiz(quizId: String)`: Deletes a quiz from Firestore and reloads the list of quizzes.\\n\\n`duplicateQuiz(quiz: Quiz)`: Duplicates a quiz in Firestore and reloads the list of quizzes.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Color.kt\&quot;:\&quot;This file defines the color palette for the QuizEC application\\u0027s user interface theme. It does not contain any classes or functions, but rather defines a set of color values that can be used throughout the application\\u0027s UI.\\n\\n`Purple80`: A dark purple color.\\n`PurpleGrey80`: A dark purple-grey color.\\n`Pink80`: A dark pink color.\\n`Purple40`: A lighter purple color.\\n`PurpleGrey40`: A lighter purple-grey color.\\n`Pink40`: A lighter pink color.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for the QuizEC Android app using Jetpack Compose. It includes the following:\\n\\n`DarkColorScheme`: A private color scheme for the dark theme.\\n\\n`LightColorScheme`: A private color scheme for the light theme.\\n\\n`QuizecTheme`: A composable function that sets the app\\u0027s theme based on the system\\u0027s dark mode setting and the device\\u0027s Android version.\\n\\nThe file sets up the color schemes and typography for the app\\u0027s light and dark themes, and provides a `QuizecTheme` function that allows the app to use the appropriate theme based on the device\\u0027s settings.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAcessCodeScreen.kt\&quot;:\&quot;This file contains the implementation of the `QuizAccessCodeScreen` composable function, which is responsible for displaying the access code for a quiz and handling the logic related to quiz access control.\\n\\n`QuizAccessCodeScreen`: A composable function that displays the access code for a quiz and handles the logic related to quiz access control.\\n\\n`QuizAccessCodeContent`: A composable function that renders the content of the `QuizAccessCodeScreen` based on the current state of the quiz.\\n\\n`QuizResult`: A sealed class that represents the result of loading the quiz data, either a successful result with the quiz data or a failure result with an error message.\\n\\n`loadQuizData`: A function that loads the quiz data from Firestore and calls the provided callback with the result.\\n\\n`WaitingScreen`: A composable function that displays a waiting screen when the user is not authorized to access the quiz.\\n\\n`copyToClipboard`: A function that copies the provided text to the device\\u0027s clipboard and displays a toast message.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/User.kt\&quot;:\&quot;This file defines a data class `User` that represents a user in the application. The class contains various properties such as the user\\u0027s ID, name, email, role, join date, completed quizzes, score, and last login timestamp.\\n\\n`User`: A data class that represents a user in the application, with properties such as ID, name, email, role, join date, completed quizzes, score, and last login timestamp.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/IdGeneratorQ.kt\&quot;:\&quot;This file does not contain any classes. It contains the following function:\\n\\n`generateUniqueQuizCode()`: This function generates a unique quiz code in the format \\\&quot;q\\\&quot; followed by 13 random digits.\\n\\nThe file appears to be a utility object that provides a function to generate unique quiz codes for a quiz application.\&quot;,\&quot;/app/src/test/java/pt/isec/ams/quizec/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. It does not contain any other classes or functions.\\n\\n`ExampleUnitTest`: This is a unit test class that tests the basic functionality of addition.\\n\\n`addition_isCorrect()`: This test function checks that the addition operation of 2 + 2 is correctly evaluated to 4.\\n\\nThe purpose of this file is to provide an example of a simple unit test for an Android application, as part of the testing documentation.\&quot;,\&quot;/app/src/main/res/xml/backup_rules.xml\&quot;:\&quot;This file is an XML document that provides a sample backup rules file for Android applications. It is used to configure the automatic backup feature in Android, which allows users to restore their app data and settings on a new device.\\n\\nThe file does not contain any classes or functions. Instead, it provides a set of comments and example configurations for the `\\u003cfull-backup-content\\u003e` element, which is used to specify the data that should be included or excluded from the backup.\\n\\nThe main purpose of this file is to serve as a template for developers to customize the backup rules for their Android applications, ensuring that the necessary data is backed up and can be restored when needed.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizHistoryScreen.kt\&quot;:\&quot;This file contains a Composable function and a helper Composable function for a quiz history screen in an Android app built with Jetpack Compose.\\n\\n`QuizHistoryScreen`: This function displays the quiz history screen, allowing the user to filter quizzes by status, view quiz details, delete quizzes, and duplicate quizzes.\\n\\n`DropdownMenuFilter`: This function creates a dropdown menu for filtering quizzes by status (All, Available, Completed, Locked).\\n\\nThe file also imports various Jetpack Compose and Android-related classes and functions to implement the quiz history screen functionality.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuestionHistoryViewModel.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`QuestionHistoryViewModel`: A ViewModel class that manages the state and operations related to questions in a quiz.\\n\\n`loadQuestions(quizId: String)`: Loads the questions associated with a specific quiz from Firestore.\\n\\n`duplicateQuestion(question: Question, quizId: String)`: Duplicates a given question and saves the new question in Firestore.\\n\\n`deleteQuestion(questionId: String, quizId: String)`: Deletes a question with the given ID from Firestore.\\n\\nThe file is responsible for managing the state and operations related to questions in a quiz, including loading, duplicating, and deleting questions from Firestore.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Quiz.kt\&quot;:\&quot;This file defines a data class `Quiz` that represents a quiz or questionnaire in the QuizEC application. The `Quiz` class contains various properties that describe the quiz, such as its title, description, creator, questions, creation timestamp, time limit, image, geolocation restrictions, access control, result display settings, participants, status, and answers.\\n\\nThe file does not contain any classes or functions, but rather defines the structure of the `Quiz` data class, which is likely used throughout the QuizEC application to manage and store quiz-related information.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/QuizStatus.kt\&quot;:\&quot;This file defines an `enum` class called `QuizStatus` that represents the different states a quiz can be in.\\n\\n`QuizStatus`: An enum class that represents the different states a quiz can be in, such as available, completed, locked, or in progress.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/LoginScreen.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`LoginScreen`: This function represents the login screen of the application, allowing users to enter their email and password, and providing functionality for logging in and navigating to the registration screen.\\n\\nThe file does not contain any classes. It focuses on the implementation of the login screen using Jetpack Compose, handling user input, observing the login state from the ViewModel, and managing the navigation between the login and registration screens.\&quot;,\&quot;/app/src/main/res/values/themes.xml\&quot;:\&quot;This file does not contain any classes or functions. It is an XML resource file that defines a theme for an Android application. The theme is named \\\&quot;Theme.Quizec\\\&quot; and it is based on the \\\&quot;android:Theme.Material.Light.NoActionBar\\\&quot; theme, which provides a light-themed user interface without an action bar.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file for an Android project named \\\&quot;Quizec\\\&quot;. It sets up the plugin management and dependency resolution for the project. There are no classes or functions defined in this file. Instead, it configures the following:\\n\\n`pluginManagement`: Specifies the repositories to be used for resolving Gradle plugins, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the repositories to be used for resolving project dependencies, including Google and Maven Central. It also sets the repositories mode to `FAIL_ON_PROJECT_REPOS`, which means that the build will fail if any project-specific repositories are defined.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;Quizec\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\&quot;,\&quot;/app/src/androidTest/java/pt/isec/ams/quizec/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app called \\\&quot;QuizEC\\\&quot;. It does not contain any classes or functions, but rather a single test case that checks if the app\\u0027s package name matches the expected value.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and checks the context of the app under test.\\n\\n`useAppContext()`: This test function checks if the package name of the app under test matches the expected value.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/LocationUtils.kt\&quot;:\&quot;`LocationUtils`: A class that provides utility functions for retrieving the user\\u0027s location using the Google Play Services Location API.\\n\\n`getUserLocation`: A function that retrieves the user\\u0027s current location and passes it to a callback function if the location is successfully obtained, or passes an error to an error callback function if there is an issue.\\n\\n`calculateDistance`: A function that calculates the distance between two geographical coordinates using the Haversine formula and returns the distance in meters.\\n\\nThis file contains utility functions for working with the user\\u0027s location in an Android application. The `LocationUtils` class provides a way to retrieve the user\\u0027s current location, and the `calculateDistance` function can be used to calculate the distance between two geographical coordinates.\&quot;,\&quot;/app/src/main/res/drawable/ic_launcher_background.xml\&quot;:\&quot;This file appears to be an Android vector drawable XML file, which defines a vector image that can be used as an app icon or other graphical element in an Android app. The file does not contain any classes or functions, but rather defines a set of paths and lines that make up the vector image.\\n\\nThe file defines a 108x108 dp vector image with a green background and a grid of white lines. The grid lines are defined using a series of `\\u003cpath\\u003e` elements, each of which specifies the start and end points of a line segment, as well as the stroke width and color.\\n\\nOverall, this file provides a vector-based representation of a simple grid-like design that can be used as an app icon or other graphical element in an Android app.\&quot;,\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\&quot;:\&quot;This file is an XML configuration for an Android adaptive icon. It does not contain any classes or functions, but rather defines the background, foreground, and monochrome elements of the adaptive icon.\\n\\n`adaptive-icon`: This element defines the adaptive icon, which is a feature in Android that allows for a single icon to be displayed in different sizes and shapes.\\n\\n`background`: This element specifies the drawable resource to be used as the background of the adaptive icon.\\n\\n`foreground`: This element specifies the drawable resource to be used as the foreground of the adaptive icon.\\n\\n`monochrome`: This element specifies the drawable resource to be used as the monochrome version of the adaptive icon, which is used in certain contexts such as the app launcher.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Answer.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Answer`: A data class that represents an answer to a question in a quiz, including the user\\u0027s response, the quiz and question IDs, and the timestamp of the response.\\n\\nThis file does not contain any functions, only the definition of the `Answer` data class.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/HomeScreen.kt\&quot;:\&quot;This file does not contain any classes. It contains the following functions:\\n\\n`HomeScreen`: This function defines the UI for the home screen of the Quizec application, including a logo, welcome message, and various buttons for creating a quiz, participating in a quiz, accessing quiz history, and logging out.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It sets up the project configuration, dependencies, and build settings for the application. There are no explicit classes or functions defined in this file. Instead, it configures the Android build process and specifies the dependencies required for the application, including Firebase services, Compose UI, and testing frameworks.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/IdGenerator.kt\&quot;:\&quot;This file does not contain any classes, but it does contain one function:\\n\\n`generateUniqueQuizId()`: This function generates a unique alphanumeric ID of 6 characters by randomly selecting characters from the range of uppercase letters and digits.\\n\\nThe purpose of this file is to provide a utility function for generating unique IDs for quizzes in the `pt.isec.ams.quizec` application.\&quot;,\&quot;/app/src/main/res/values/colors.xml\&quot;:\&quot;This file does not contain any classes or functions. It is an XML resource file that defines a set of color values for an Android application. The colors defined in this file can be used throughout the application to provide a consistent visual style. The colors include various shades of purple, teal, black, and white, which can be used for things like the app\\u0027s primary and secondary color schemes, background colors, and text colors.\&quot;,\&quot;/app/src/main/res/drawable/baseline_quiz_24.xml\&quot;:\&quot;This file appears to be an Android vector drawable resource, which defines a vector graphic that can be used in Android applications. The file does not contain any classes or functions, but rather defines the visual appearance of the vector graphic.\\n\\nThe vector graphic appears to be a lock icon, with a path that represents the lock shape and another path that represents a document or page. The icon is colored with a reddish-brown tint (`#BD1A1A`), and the vector graphic is sized to 24x24 dp.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizCreationScreen.kt\&quot;:\&quot;This file contains a Composable function `QuizCreationScreen` that represents the UI for creating a quiz in an Android app. It manages the state of various quiz configurations, question types, and the ability to add and save the quiz. The file also contains several other Composable functions that represent the UI for different types of quiz questions.\\n\\n`QuizCreationScreen`: Composable function that represents the UI for creating a quiz, including configuring the quiz, adding questions, and saving the quiz.\\n\\n`P01Question`: Composable function that represents the UI for a True/False type of quiz question.\\n\\n`P02Question`: Composable function that represents the UI for a multiple-choice type of quiz question with dynamic options.\\n\\n`P03Question`: Composable function that represents the UI for a multiple-selection type of quiz question with dynamic options.\\n\\n`P04Question`: Composable function that represents the UI for a matching type of quiz question with dynamic pairs.\\n\\n`P05Question`: Composable function that represents the UI for a reordering type of quiz question with dynamic items.\\n\\n`P06Question`: Composable function that represents the UI for a fill-in-the-blank type of quiz question with dynamic options and correct answers.\\n\\n`P07Question`: Composable function that represents the UI for an association type of quiz question with dynamic associations.\\n\\n`P08Question`: Composable function that represents the UI for a fill-in-the-blank type of quiz question with dynamic answers.\\n\\n`AddQuestionButton`: Composable function that represents a button to add a new question to the quiz.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/LoginViewModel.kt\&quot;:\&quot;`LoginViewModel`: A ViewModel class that handles the login functionality using Firebase Authentication.\\n\\n`login(email: String, password: String)`: Attempts to log in the user with the provided email and password, and updates the `loginState` LiveData accordingly.\\n\\n`resetState()`: Resets the `loginState` LiveData to `null`.\\n\\n`LoginState`: A sealed class that represents the possible states of the login process, either `Success` or `Error` with a message.\\n\\nThis file contains a ViewModel class `LoginViewModel` that is responsible for handling the login functionality using Firebase Authentication. It provides a `login()` function to attempt the login process and updates a `loginState` LiveData to reflect the result. The file also includes a `resetState()` function to reset the `loginState` and a `LoginState` sealed class to represent the possible login states.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/MainActivity.kt\&quot;:\&quot;This file appears to be the main entry point for a Quizec Android application. It sets up the navigation and screens for the app, including screens for login, registration, home, quiz access, quiz creation, quiz history, and question history. The file does not contain any classes, but it does define several functions:\\n\\n`MainActivity`: The main activity of the Android app, which sets up the edge-to-edge mode and the content of the app.\\n\\n`QuizecApp`: Composes the main Scaffold for the app, including the navigation host.\\n\\n`AppNavHost`: Defines the navigation graph for the app, including the various screens and their corresponding view models.\\n\\nThe file is responsible for setting up the overall structure and navigation of the Quizec Android application, allowing users to interact with various screens and features related to quizzes.\&quot;,\&quot;/app/src/main/res/values/strings.xml\&quot;:\&quot;This file appears to be an Android resource file that defines a string resource for the application name \\\&quot;Quizec\\\&quot;. It does not contain any classes or functions. The purpose of this file is to provide a centralized location for storing and managing string resources used throughout the Android application.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file for an Android application project. It sets up common configuration options for all sub-projects or modules within the project, such as applying the Android application, Kotlin Android, and Kotlin Compose plugins, as well as the Google Play Services plugin.\\n\\nThere are no classes or functions defined in this file. Instead, it is a Gradle build script that configures the overall project settings and dependencies.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/AuthViewModel.kt\&quot;:\&quot;This file contains the following:\\n\\n`AuthViewModel`: A ViewModel class that provides access to the Firebase Authentication service and the current user\\u0027s unique identifier (UID).\\n\\n`creatorId`: A property that retrieves the UID of the currently authenticated user, or an empty string if no user is authenticated.\\n\\nThis file is part of the QuizEC application and is responsible for managing the authentication-related functionality of the application, such as retrieving the current user\\u0027s unique identifier.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizScreenViewModel.kt\&quot;:\&quot;This file contains a single class, `QuizScreenViewModel`, which is a ViewModel class responsible for managing the state and logic related to a quiz screen in an Android application.\\n\\n`QuizScreenViewModel`: A ViewModel class that manages the state and logic related to a quiz screen, including loading the quiz and questions from Firestore, handling the current question index, and providing methods to load the next and previous questions.\\n\\n`loadQuizAndFirstQuestion(quizId: String)`: Loads the quiz and the first question from Firestore based on the provided quiz ID.\\n\\n`loadQuestionById(questionId: String)`: Loads a specific question from Firestore based on the provided question ID.\\n\\n`loadNextQuestion()`: Loads the next question in the quiz, if available.\\n\\n`loadPreviousQuestion()`: Loads the previous question in the quiz, if available.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Question.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Question`: A data class that represents a question in a quiz, including its ID, quiz ID, title, type, options, correct answers, and an optional image URL.\\n\\nThe file does not contain any functions, but rather defines the structure of the `Question` data class, which can be used to represent and manage quiz questions in an application.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/QuestionType.kt\&quot;:\&quot;This file defines an `enum` class called `QuestionType` that represents different types of questions that can be used in a quiz application.\\n\\n`QuestionType`: An enum class that represents different types of quiz questions, such as yes/no, multiple choice, matching, ordering, fill-in-the-blank, and association.\\n\\n`toString()`: A function that overrides the default `toString()` method to return the label associated with each `QuestionType` enum value.\&quot;,\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAccessScreen.kt\&quot;:\&quot;This file contains a Composable function `QuizAccessScreen` that handles the UI and logic for accessing a quiz, including checking the user\\u0027s location, loading the quiz, and displaying the quiz questions. It also includes two other Composable functions, `MultipleChoiceQuestion` and `TrueFalseQuestion`, which handle the display of different types of quiz questions.\\n\\n`QuizAccessScreen`: Handles the UI and logic for accessing a quiz, including checking the user\\u0027s location, loading the quiz, and displaying the quiz questions.\\n\\n`MultipleChoiceQuestion`: Displays a multiple-choice quiz question and provides buttons for navigating to the next or previous question.\\n\\n`TrueFalseQuestion`: Displays a true/false quiz question and provides buttons for navigating to the next or previous question.\\n\\n`addParticipant`: Adds the current user to the list of participants for a quiz.\\n\\n`checkAccess`: Checks if the current user is allowed to access the quiz.\\n\\n`loadQuiz`: Loads the quiz and the first question.\\n\\n`nextQuestion`: Loads the next question in the quiz.\\n\\n`previousQuestion`: Loads the previous question in the quiz.\\n\\n`checkLocation`: Checks the user\\u0027s location and determines if they are within the required distance to access the quiz.\&quot;,\&quot;/app/src/main/res/drawable/placeholder_image.xml\&quot;:\&quot;This file is an Android vector drawable resource that defines a circular icon with a user profile image. The icon has two main components: a circular background and a user profile image inside the circle.\\n\\nThe file does not contain any classes or functions. Instead, it defines the vector drawable using the `\\u003cvector\\u003e` element, which specifies the dimensions, viewport, and path data for the icon.\\n\\nThe `\\u003cpath\\u003e` element defines the shape and color of the icon. The `android:fillColor` attribute sets the color of the circular background to `#B0BEC5`, and the `android:pathData` attribute defines the path data for the user profile image.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/USUARIO/AndroidStudioProjects/Quizec&quot;:&quot;{\&quot;/app/src/androidTest/java/pt/isec/ams/quizec/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/pt/isec/ams/quizec/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Answer.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Answer.kt\&quot;,\&quot;file_name\&quot;:\&quot;Answer.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Question.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Question.kt\&quot;,\&quot;file_name\&quot;:\&quot;Question.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/QuestionType.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/QuestionType.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuestionType.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Quiz.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/Quiz.kt\&quot;,\&quot;file_name\&quot;:\&quot;Quiz.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/QuizStatus.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/QuizStatus.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizStatus.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/User.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/User.kt\&quot;,\&quot;file_name\&quot;:\&quot;User.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/UserRole.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/data/models/UserRole.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserRole.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/HomeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/HomeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/LoginScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/LoginScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoginScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuestionHistoryScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuestionHistoryScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuestionHistoryScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAccessScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAccessScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizAccessScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAcessCodeScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizAcessCodeScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizAcessCodeScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizCreationScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizCreationScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizCreationScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizHistoryScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizHistoryScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizHistoryScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/QuizScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/RegisterScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/screens/RegisterScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;RegisterScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/IdGenerator.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/IdGenerator.kt\&quot;,\&quot;file_name\&quot;:\&quot;IdGenerator.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/IdGeneratorQ.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/IdGeneratorQ.kt\&quot;,\&quot;file_name\&quot;:\&quot;IdGeneratorQ.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/LocationUtils.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/utils/LocationUtils.kt\&quot;,\&quot;file_name\&quot;:\&quot;LocationUtils.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/AuthViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/AuthViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;AuthViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/LoginViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/LoginViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoginViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuestionHistoryViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuestionHistoryViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuestionHistoryViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizCreationViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizCreationViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizCreationViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizHistoryViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizHistoryViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizHistoryViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizScreenViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/QuizScreenViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;QuizScreenViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/RegisterViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/viewmodel/RegisterViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;RegisterViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/pt/isec/ams/quizec/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/pt/isec/ams/quizec/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/drawable/baseline_quiz_24.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/drawable/baseline_quiz_24.xml\&quot;,\&quot;file_name\&quot;:\&quot;baseline_quiz_24.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/drawable/ic_launcher_background.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/drawable/ic_launcher_background.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher_background.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/drawable/ic_launcher_foreground.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/drawable/ic_launcher_foreground.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher_foreground.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/drawable/placeholder_image.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/drawable/placeholder_image.xml\&quot;,\&quot;file_name\&quot;:\&quot;placeholder_image.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher_round.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/values/colors.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/values/colors.xml\&quot;,\&quot;file_name\&quot;:\&quot;colors.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/values/strings.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/values/strings.xml\&quot;,\&quot;file_name\&quot;:\&quot;strings.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/values/themes.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/values/themes.xml\&quot;,\&quot;file_name\&quot;:\&quot;themes.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/xml/backup_rules.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/xml/backup_rules.xml\&quot;,\&quot;file_name\&quot;:\&quot;backup_rules.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/xml/data_extraction_rules.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/xml/data_extraction_rules.xml\&quot;,\&quot;file_name\&quot;:\&quot;data_extraction_rules.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/AndroidManifest.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/AndroidManifest.xml\&quot;,\&quot;file_name\&quot;:\&quot;AndroidManifest.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/pt/isec/ams/quizec/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/pt/isec/ams/quizec/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/google-services.json\&quot;:{\&quot;file_path\&quot;:\&quot;/app/google-services.json\&quot;,\&quot;file_name\&quot;:\&quot;google-services.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>